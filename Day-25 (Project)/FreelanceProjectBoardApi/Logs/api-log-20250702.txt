{"Timestamp":"2025-07-02T05:56:32.5471080+00:00","Level":"Fatal","MessageTemplate":"Startup failed unexpectedly","Exception":"System.InvalidOperationException: Unable to configure HTTPS endpoint. No server certificate was specified, and the default developer certificate could not be found or is out of date.\nTo generate a developer certificate run 'dotnet dev-certs https'. To trust the certificate (Windows and macOS only) run 'dotnet dev-certs https --trust'.\nFor more information on configuring HTTPS see https://go.microsoft.com/fwlink/?linkid=848054.\n   at Microsoft.AspNetCore.Hosting.ListenOptionsHttpsExtensions.UseHttps(ListenOptions listenOptions, Action`1 configureOptions)\n   at Program.<>c.<<Main>$>b__0_13(ListenOptions listenOptions) in /app/Program.cs:line 43\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.ListenAnyIP(Int32 port, Action`1 configure)\n   at Program.<>c.<<Main>$>b__0_0(KestrelServerOptions serverOptions) in /app/Program.cs:line 40\n   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)\n   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.CreateServiceContext(IOptions`1 options, ILoggerFactory loggerFactory, DiagnosticSource diagnosticSource, KestrelMetrics metrics)\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl..ctor(IOptions`1 options, IEnumerable`1 transportFactories, IEnumerable`1 multiplexedFactories, IHttpsConfigurationService httpsConfigurationService, ILoggerFactory loggerFactory, DiagnosticSource diagnosticSource, KestrelMetrics metrics)\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\n   at System.Reflection.MethodBaseInvoker.InvokeWithManyArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\n   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)\n   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)\n   at Microsoft.AspNetCore.Builder.WebApplication.get_ServerFeatures()\n   at Microsoft.AspNetCore.Builder.WebApplication..ctor(IHost host)\n   at Microsoft.AspNetCore.Builder.WebApplicationBuilder.Build()\n   at Program.<Main>$(String[] args) in /app/Program.cs:line 236","Properties":{"MachineName":"e9e540a76b97","ThreadId":1,"Application":"Freelance Project Board API"}}
{"Timestamp":"2025-07-02T06:52:03.2815020+00:00","Level":"Fatal","MessageTemplate":"Startup failed unexpectedly","Exception":"Microsoft.Extensions.Hosting.HostAbortedException: The host was aborted.\n   at Microsoft.Extensions.Hosting.HostFactoryResolver.HostingListener.ThrowHostAborted()\n   at Microsoft.Extensions.Hosting.HostFactoryResolver.HostingListener.OnNext(KeyValuePair`2 value)\n   at System.Diagnostics.DiagnosticListener.Write(String name, Object value)\n   at Microsoft.Extensions.Hosting.HostBuilder.ResolveHost(IServiceProvider serviceProvider, DiagnosticListener diagnosticListener)\n   at Microsoft.Extensions.Hosting.HostApplicationBuilder.Build()\n   at Microsoft.AspNetCore.Builder.WebApplicationBuilder.Build()\n   at Program.<Main>$(String[] args) in /app/Program.cs:line 236","Properties":{"MachineName":"1f5b8a68b58e","ThreadId":4,"Application":"Freelance Project Board API"}}
{"Timestamp":"2025-07-02T07:13:12.5681324+00:00","Level":"Fatal","MessageTemplate":"Startup failed unexpectedly","Exception":"Microsoft.Extensions.Hosting.HostAbortedException: The host was aborted.\n   at Microsoft.Extensions.Hosting.HostFactoryResolver.HostingListener.ThrowHostAborted()\n   at Microsoft.Extensions.Hosting.HostFactoryResolver.HostingListener.OnNext(KeyValuePair`2 value)\n   at System.Diagnostics.DiagnosticListener.Write(String name, Object value)\n   at Microsoft.Extensions.Hosting.HostBuilder.ResolveHost(IServiceProvider serviceProvider, DiagnosticListener diagnosticListener)\n   at Microsoft.Extensions.Hosting.HostApplicationBuilder.Build()\n   at Microsoft.AspNetCore.Builder.WebApplicationBuilder.Build()\n   at Program.<Main>$(String[] args) in /app/Program.cs:line 236","Properties":{"MachineName":"e356ad299089","ThreadId":4,"Application":"Freelance Project Board API"}}
{"Timestamp":"2025-07-02T07:16:26.0660928+00:00","Level":"Fatal","MessageTemplate":"Startup failed unexpectedly","Exception":"Microsoft.Extensions.Hosting.HostAbortedException: The host was aborted.\n   at Microsoft.Extensions.Hosting.HostFactoryResolver.HostingListener.ThrowHostAborted()\n   at Microsoft.Extensions.Hosting.HostFactoryResolver.HostingListener.OnNext(KeyValuePair`2 value)\n   at System.Diagnostics.DiagnosticListener.Write(String name, Object value)\n   at Microsoft.Extensions.Hosting.HostBuilder.ResolveHost(IServiceProvider serviceProvider, DiagnosticListener diagnosticListener)\n   at Microsoft.Extensions.Hosting.HostApplicationBuilder.Build()\n   at Microsoft.AspNetCore.Builder.WebApplicationBuilder.Build()\n   at Program.<Main>$(String[] args) in /app/Program.cs:line 236","Properties":{"MachineName":"cdfaf34b42f9","ThreadId":4,"Application":"Freelance Project Board API"}}
