x1) create a program that will take name from user and greet the user

2) Take 2 numbers from user and print the largest

3) Take 2 numbers from user, check the operation user wants to perform (+,-,*,/). Do the operation and print the result

4) Take username and password from user. Check if user name is "Admin" and password is "pass" if yes then print success message.
Give 3 attempts to user. In the end of eh 3rd attempt if user still is unable to provide valid creds then exit the application after print the message 
"Invalid attempts for 3 times. Exiting...."

5) Take 10 numbers from user and print the number of numbers that are divisible by 7	

6) Count the Frequency of Each Element
Given an array, count the frequency of each element and print the result.
Input: {1, 2, 2, 3, 4, 4, 4}

output
1 occurs 1 times  
2 occurs 2 times  
3 occurs 1 times  
4 occurs 3 times

7) create a program to rotate the array to the left by one position.
Input: {10, 20, 30, 40, 50}
Output: {20, 30, 40, 50, 10}

8) Given two integer arrays, merge them into a single array.
Input: {1, 3, 5} and {2, 4, 6}
Output: {1, 3, 5, 2, 4, 6}

9) Write a program that:

Has a predefined secret word (e.g., "GAME").

Accepts user input as a 4-letter word guess.

Compares the guess to the secret word and outputs:

X Bulls: number of letters in the correct position.

Y Cows: number of correct letters in the wrong position.

Continues until the user gets 4 Bulls (i.e., correct guess).

Displays the number of attempts.

Bull = Correct letter in correct position.

Cow = Correct letter in wrong position.

Secret Word	User Guess	Output	Explanation
GAME	GAME	4 Bulls, 0 Cows	Exact match
GAME	MAGE	1 Bull, 3 Cows	A in correct position, MGE misplaced
GAME	GUYS	1 Bull, 0 Cows	G in correct place, rest wrong
GAME	AMGE	2 Bulls, 2 Cows	A, E right; M, G misplaced
NOTE	TONE	2 Bulls, 2 Cows	O, E right; T, N misplaced

10) write a program that accepts a 9-element array representing a Sudoku row.

Validates if the row:

Has all numbers from 1 to 9.

Has no duplicates.

Displays if the row is valid or invalid.

11) 11) In the question ten extend it to validate a sudoku game. 
Validate all 9 rows (use int[,] board = new int[9,9])

12) Write a program that:

Takes a message string as input (only lowercase letters, no spaces or symbols).

Encrypts it by shifting each character forward by 3 places in the alphabet.

Decrypts it back to the original message by shifting backward by 3.

Handles wrap-around, e.g., 'z' becomes 'c'.

Examples
Input:     hello
Encrypted: khoor
Decrypted: hello
-------------
Input:     xyz
Encrypted: abc
Test cases
| Input | Shift | Encrypted | Decrypted |
| ----- | ----- | --------- | --------- |
| hello | 3     | khoor     | hello     |
| world | 3     | zruog     | world     |
| xyz   | 3     | abc       | xyz       |
| apple | 1     | bqqmf     | apple     |